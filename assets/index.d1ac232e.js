import{i as te,B as oe,S as C,E as G,y as se,C as L,q as j,I as F,l as ce,p as ie}from"./vendor.e711fc39.js";const le=function(){const l=document.createElement("link").relList;if(l&&l.supports&&l.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))c(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const f of o.addedNodes)f.tagName==="LINK"&&f.rel==="modulepreload"&&c(f)}).observe(document,{childList:!0,subtree:!0});function n(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerpolicy&&(o.referrerPolicy=t.referrerpolicy),t.crossorigin==="use-credentials"?o.credentials="include":t.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function c(t){if(t.ep)return;t.ep=!0;const o=n(t);fetch(t.href,o)}};le();const re={apiKey:"AIzaSyBLAS9TSpc8v-273koNVal1Tt1jes7lAQQ",authDomain:"webcodec-64053.firebaseapp.com",projectId:"webcodec-64053",storageBucket:"webcodec-64053.appspot.com",messagingSenderId:"499852745372",appId:"1:499852745372:web:c5d05223a82e7e26c86b59",measurementId:"G-TY670YZV22"};te(re);const de={iceServers:[{urls:["stun:stun1.l.google.com:19302","stun:stun2.l.google.com:19302"]}],iceCandidatePoolSize:10},u=new RTCPeerConnection(de);let S=null,Y=null;const K=document.getElementById("webcamButton"),J=document.getElementById("webcamVideo"),R=document.getElementById("callButton"),U=document.getElementById("callInput"),V=document.getElementById("answerButton"),Z=document.getElementById("remoteVideo"),ue=document.getElementById("hangupButton"),W=document.getElementById("callMessage");let i,h,d=!1;Nexus.colors.accent="#2596be";Nexus.colors.fill="#333";var pe=new Nexus.Toggle("#muteMo",{state:!0});pe.on("change",function(s){document.getElementById("muteMonitor").click()});var me=new Nexus.Toggle("#muteMy");me.on("change",function(s){document.getElementById("muteMe").click()});var fe=new Nexus.Select("audioSourceSelect",{size:[200,20],options:["Default - MacBook Pro Microphone","iPhone"]});fe.colorize("fill","#eee");var ge=new Nexus.Select("audioOutputSelect",{size:[200,20],options:["Defalut - MacBook Pro Speakers (Built-in)"]});ge.colorize("fill","#eee");var X=new Nexus.TextButton("#startDevices",{size:[150,50],state:!1,text:"Init",alternateText:"Activated"});X.colorize("fill","#eee");X.on("change",function(s){K.click()});var N=new Nexus.Dial("#comp_threshold",{size:[50,50],interaction:"radial",mode:"relative",min:-100,max:0,step:1,value:-24}),x=new Nexus.Dial("#comp_knee",{size:[50,50],interaction:"radial",mode:"relative",min:0,max:40,step:1,value:30}),D=new Nexus.Dial("#comp_ratio",{size:[50,50],interaction:"radial",mode:"relative",min:1,max:20,step:1,value:12}),B=new Nexus.Dial("#comp_attack",{size:[50,50],interaction:"radial",mode:"relative",min:0,max:1,step:.01,value:.003}),w=new Nexus.Dial("#comp_release",{size:[50,50],interaction:"radial",mode:"relative",min:0,max:1,step:.05,value:.25}),I=new Nexus.Toggle("#comp_bypass");new Nexus.Dial("#reverb",{size:[50,50],interaction:"radial",mode:"relative",min:0,max:20,step:1,value:10});new Nexus.Toggle("#rev_bypass");var O=new Nexus.Toggle("#eq_bypass"),y=new Nexus.Select("eq_type",{size:[200,20],options:["lowshelf","highshelf"]}),k=new Nexus.Slider("eq_freq",{size:[120,20],mode:"relative",min:20,max:2e4,step:100,value:1e3}),E=new Nexus.Dial("#eq1",{size:[50,50],interaction:"radial",mode:"relative",min:-20,max:40,step:0,value:10}),T=new Nexus.Dial("#eq2",{size:[50,50],interaction:"radial",mode:"relative",min:-20,max:40,step:0,value:10}),_=new Nexus.Dial("#eq3",{size:[50,50],interaction:"radial",mode:"relative",min:-20,max:40,step:0,value:10}),z=new Nexus.Toggle("#gain_bypass"),b=new Nexus.Dial("#gain",{size:[50,50],interaction:"radial",mode:"relative",min:0,max:20,step:1,value:2}),M=new Nexus.Toggle("#pan_bypass"),q=new Nexus.Dial("#pan",{size:[50,50],interaction:"radial",mode:"relative",min:-1,max:1,step:.1,value:0}),e={comp:{attack:B.value,bypass:I.state,knee:x.value,ratio:D.value,release:w.value,threshold:N.value},eq:{low:E.value,mid:T.value,high:_.value,bypass:O.state,freq:k.value,type:y.value},pan:{bypass:M.state,pan:q.value},gain:{bypass:z.state,gain:b.value},whatChanged:"none"};const ve=document.getElementById("remoteVideo"),P=document.getElementById("audioSource"),A=document.getElementById("audioOutput"),Q=[P,A];function he(s){const l=Q.map(n=>n.value);Q.forEach(n=>{for(;n.firstChild;)n.removeChild(n.firstChild)});for(let n=0;n!==s.length;++n){const c=s[n],t=document.createElement("option");t.value=c.deviceId,c.kind==="audioinput"?(t.text=c.label||`microphone ${P.length+1}`,P.appendChild(t)):c.kind==="audiooutput"&&(t.text=c.label||`speaker ${A.length+1}`,A.appendChild(t))}Q.forEach((n,c)=>{Array.prototype.slice.call(n.childNodes).some(t=>t.value===l[c])&&(n.value=l[c])})}navigator.mediaDevices.enumerateDevices().then(he).catch(console.log("media query success"));function be(){const s=A.value;ve.setSinkId(s).then(console.log("success"))}function ee(){return{audio:{deviceId:P.value,echoCancellation:!1,noiseSuppression:!1,autoGainControl:!1,latency:0,sampleRate:48e3,sampleSize:16,volume:1},video:!1}}var ae=ee();P.addEventListener("change",function(){ae=ee()});A.onchange=be;K.onclick=async()=>{S=await navigator.mediaDevices.getUserMedia(ae),Y=new MediaStream,S.getTracks().forEach(s=>{u.addTrack(s,S)}),u.ontrack=s=>{s.streams[0].getTracks().forEach(l=>{Y.addTrack(l)})},Z.srcObject=Y,J.play(),Z.play(),R.disabled=!1,V.disabled=!1,K.disabled=!0,we()};const $=document.getElementById("muteMonitor");$.checked==!0?J.muted=!0:J.muted=!1;$.addEventListener("change",function(){$.checked==!0?(J.muted=!0,console.log("monitor muted")):(J.muted=!1,console.log("monitor unmuted"))});const H=document.getElementById("muteMe");H.checked=!1;H.addEventListener("change",function(){H.checked==!0?(S.getTracks()[0].enabled=!1,console.log("muted me")):(S.getTracks()[0].enabled=!0,console.log("unmuted me"))});const v=oe();R.onclick=async()=>{i=u.createDataChannel("sendDataChannel"),i.onopen=a=>{console.log("send channel opened")},i.onclose=a=>{console.log("send channel closed")},u.ondatachannel=a=>{h=a.channel,h.onmessage=async r=>{switch(d=!0,e=JSON.parse(r.data),e.whatChanged){case"comp.threshold":await(N.value=e.comp.threshold),d=!1;break;case"comp.release":await(w.value=e.comp.release),d=!1;break;case"comp.attack":await(B.value=e.comp.attack);break;case"comp.knee":await(x.value=e.comp.knee);break;case"comp.ratio":await(D.value=e.comp.ratio);break;case"comp.reduction":await(comp_recduction.value=e.comp.reduction);break;case"eq.type":await(y.value=e.eq.type);break;case"eq.freq":await(k.value=e.eq.freq);break;case"eq.low":await(E.value=e.eq.low);break;case"eq.mid":await(T.value=e.eq.mid);break;case"eq.high":await(_.value=e.eq.high);break;case"pan.pan":await(q.value=e.pan.pan);break;case"gain.gain":await(b.value=e.gain.gain);break;case"comp.bypass":await(I.state=e.comp.bypass);break;case"eq.bypass":await(O.state=e.eq.bypass);break;case"gain.bypass":await(z.state=e.gain.bypass);break;case"pan.bypass":await(M.state=e.pan.bypass);break;default:console.log("invalid exchanged value");break}},h.onopen=r=>{console.log("receive channel opened")},h.onclose=r=>{console.log("receive channel closed")}};let s=document.createTextNode("You created a call.");W.appendChild(s),R.disabled=!0,V.disabled=!0;const l=C(v,"calls1"),n=await G(l,{});U.value=n.id;const c=C(v,"calls1",n.id,"offerCandidates"),t=C(v,"calls1",n.id,"answerCandidates");u.onicecandidate=a=>{a.candidate&&G(c,a.candidate.toJSON()),console.log("PA updated candidates in database")};const o=await u.createOffer().then(console.log("PA created offer"));o.sdp=o.sdp.replace("useinbandfec=1","useinbandfec=1; stereo=1; maxaveragebitrate=510000"),await u.setLocalDescription(o).then(console.log("PA set local desc"));const f={sdp:o.sdp,type:o.type};await se(L(v,"calls1",n.id),{offer:f}).then(console.log("PA updated offer in database"));const g=j(L(v,"calls1",n.id));F(g,a=>{const r=a.data();if(!u.currentRemoteDescription&&(r==null?void 0:r.answer)){const m=new RTCSessionDescription(r.answer);u.setRemoteDescription(m),console.log("PA set remote desc")}});const p=j(t);F(p,a=>{a.docChanges().forEach(r=>{if(r.type==="added"){const m=new RTCIceCandidate(r.doc.data());u.addIceCandidate(m)}})}),ue.disabled=!1};V.onclick=async()=>{i=u.createDataChannel("sendDataChannel2"),i.onopen=r=>{console.log("send channel opened")},i.onclose=r=>{console.log("send channel closed")},u.ondatachannel=r=>{h=r.channel,h.onmessage=async m=>{switch(d=!0,e=JSON.parse(m.data),e.whatChanged){case"comp.threshold":await(N.value=e.comp.threshold),d=!1;break;case"comp.release":await(w.value=e.comp.release),d=!1;break;case"comp.attack":await(B.value=e.comp.attack);break;case"comp.knee":await(x.value=e.comp.knee);break;case"comp.ratio":await(D.value=e.comp.ratio);break;case"comp.reduction":await(comp_recduction.value=e.comp.reduction);break;case"eq.type":await(y.value=e.eq.type);break;case"eq.freq":await(k.value=e.eq.freq);break;case"eq.low":await(E.value=e.eq.low);break;case"eq.mid":await(T.value=e.eq.mid);break;case"eq.high":await(_.value=e.eq.high);break;case"pan.pan":await(q.value=e.pan.pan);break;case"gain.gain":await(b.value=e.gain.gain);break;case"comp.bypass":await(I.state=e.comp.bypass);break;case"eq.bypass":await(O.state=e.eq.bypass);break;case"gain.bypass":await(z.state=e.gain.bypass);break;case"pan.bypass":await(M.state=e.pan.bypass);break;default:console.log("invalid exchanged value");break}},h.onopen=m=>{console.log("receive channel opened")},h.onclose=m=>{console.log("receive channel closed")}};let s=document.createTextNode("You answered a call!");W.appendChild(s),R.disabled=!0,V.disabled=!0;const l=U.value,n=C(v,"calls1"),c=C(v,"calls1",l,"answerCandidates"),t=C(v,"calls1",l,"offerCandidates");u.onicecandidate=r=>{r.candidate&&G(c,r.candidate.toJSON()),console.log("PB updated candidate in database")};const f=(await ce(L(n,l))).data().offer;await u.setRemoteDescription(new RTCSessionDescription(f)),console.log("PB set remote desc");const g=await u.createAnswer();g.sdp=g.sdp.replace("useinbandfec=1","useinbandfec=1; stereo=1; maxaveragebitrate=510000"),await u.setLocalDescription(g),console.log("PB set local desc");const p={type:g.type,sdp:g.sdp};await ie(L(v,"calls1",l),{answer:p}),console.log("PB updated answer in database");const a=j(t);F(a,r=>{r.docChanges().forEach(m=>{if(m.type==="added"){let ne=m.doc.data();u.addIceCandidate(new RTCIceCandidate(ne))}})})};async function we(){console.log("button has been pushed");var s=new AudioContext,l=s.createMediaStreamSource(S),n=s.createBiquadFilter();n.type=y.value,n.frequency.value=k.value,n.gain.value=b.value;var c=s.createStereoPanner();c.pan.value=q.value;var t=s.createGain();t.gain.value=b.value;var o=s.createDynamicsCompressor();o.release.value=w.value,l.connect(o),o.connect(n),n.connect(t),t.connect(c),c.connect(s.destination),N.on("change",function(p){if(o.threshold.value=N.value,e.comp.threshold=N.value,e.whatChanged="comp.threshold",!d){const a=JSON.stringify(e);try{i.send(a)}catch(r){console.error(r),console.log(i.readyState),console.log(u.iceGatheringState),console.log(u.iceConnectionState),console.log(u.connectionState)}finally{console.log("sent"),console.log(i.readyState)}console.log("threshold: ",e.comp.threshold)}}),w.on("change",function(p){if(o.release.value=w.value,e.comp.release=w.value,e.whatChanged="comp.release",!d){const a=JSON.stringify(e);i.send(a)}}),B.on("change",function(p){if(o.attack.value=B.value,e.comp.attack=B.value,e.whatChanged="comp.attack",!d){const a=JSON.stringify(e);i.send(a)}}),x.on("change",function(p){if(o.knee.value=x.value,e.comp.knee=x.value,e.whatChanged="comp.knee",!d){const a=JSON.stringify(e);i.send(a)}}),D.on("change",function(p){if(o.ratio.value=D.value,e.comp.ratio=D.value,e.whatChanged="comp.ratio",!d){const a=JSON.stringify(e);i.send(a)}}),y.on("change",function(p){if(n.type=y.value,e.eq.type=y.value,e.whatChanged="eq.type",!d){const a=JSON.stringify(e);i.send(a)}}),k.on("change",function(p){if(n.frequency.value=k.value,e.eq.freq=k.value,e.whatChanged="eq.freq",!d){const a=JSON.stringify(e);i.send(a)}}),E.on("change",function(p){if(n.gain.value=E.value,e.eq.low=E.value,e.whatChanged="eq.low",!d){const a=JSON.stringify(e);i.send(a)}}),T.on("change",function(p){if(n.gain.value=T.value,e.eq.mid=T.value,e.whatChanged="eq.mid",!d){const a=JSON.stringify(e);i.send(a)}}),_.on("change",function(p){if(n.gain.value=_.value,e.eq.high=_.value,e.whatChanged="eq.high",!d){const a=JSON.stringify(e);i.send(a)}}),q.on("change",function(p){if(c.pan.value=q.value,e.pan.pan=q.value,e.whatChanged="pan.pan",!d){const a=JSON.stringify(e);i.send(a)}}),b.on("change",function(p){if(t.gain.value=b.value,e.gain.gain=b.value,e.whatChanged="gain.gain",!d){const a=JSON.stringify(e);i.send(a)}}),I.on("change",function(p){if(I.state==!0?(o.disconnect(),l.connect(n)):(l.disconnect(n),l.connect(o),o.connect(n)),e.comp.bypass=I.state,e.whatChanged="comp.bypass",!d){const a=JSON.stringify(e);i.send(a)}}),O.on("change",function(p){if(O.state==!0?(n.disconnect(),o.connect(t)):(o.disconnect(t),o.connect(n),n.connect(t)),e.eq.bypass=O.state,e.whatChanged="eq.bypass",!d){const a=JSON.stringify(e);i.send(a)}}),z.on("change",function(p){if(z.state==!0?(t.disconnect(),n.connect(c)):(n.disconnect(c),n.connect(t),t.connect(c)),e.gain.bypass=z.state,e.whatChanged="gain.bypass",!d){const a=JSON.stringify(e);i.send(a)}}),M.on("change",function(p){if(M.state==!0?(c.disconnect(),t.connect(s.destination)):(t.disconnect(s.destination),t.connect(c),c.connect(s.destination)),e.pan.bypass=M.state,e.whatChanged="pan.bypass",!d){const a=JSON.stringify(e);i.send(a)}});var f=new Nexus.Oscilloscope("#oScope");f.connect(l);var g=new Nexus.Spectrogram("#spec");g.connect(l)}
